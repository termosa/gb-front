import {{ camelCase name }} from '.'

export const meta = {
  type: 'hook',
  name: '{{ camelCase name }}',
  description: 'Simple value counter',
  tags: ['hook'],
  lists: {
    arguments: [
      { name: 'initialValue', type: 'number | () => number', description: 'Starting value' },
    ],
    returns: [
      { name: 'counter', type: 'object' },
      { name: 'counter.count', type: 'number', description: 'Current value' },
      { name: 'counter.increment', type: '() => void', description: 'Increasing value by one' },
    ],
  },
  scope: { {{ camelCase name }} },
}

## Usage

```jsx
const Component = () => {
  const { count, increment } = {{ camelCase name }}()
  return <input type="button" onClick={increment} value={`Clicked ${count} time(s)`} />
}
```

## Playground

```jsx live render
const ClickCounter = ({ initialValue }) => {
  const { count, increment } = {{ camelCase name }}(initialValue)
  return (
    <input
      type="button"
      onClick={increment}
      value={`Clicked ${count} time(s)`}
    />
  )
}

render(<ClickCounter initialValue={-1} />)
```
